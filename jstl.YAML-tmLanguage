# [PackageDev] target_format: plist, ext: tmLanguage
name: JSTL
scopeName: text.html.jstl
fileTypes: [jstl,jsp,tag]
uuid: 17994EC8-6B1D-11D9-AC3A-000D93589AF6

patterns:
- name: meta.tag.any.html
  begin: (<)([a-zA-Z0-9:]++)(?=[^>]*></\2>)
  beginCaptures:
    '1': {name: punctuation.definition.tag.begin.html}
    '2': {name: entity.name.tag.html}
  end: (>)(<)(/)(\2)(>)
  endCaptures:
    '1': {name: punctuation.definition.tag.end.html}
    '2': {name: punctuation.definition.tag.begin.html meta.scope.between-tag-pair.html}
    '3': {name: punctuation.definition.tag.begin.html}
    '4': {name: entity.name.tag.html}
    '5': {name: punctuation.definition.tag.end.html}
  patterns:
  - include: '#tag-stuff'

- include: '#jstl'

- name: meta.tag.preprocessor.xml.html
  begin: (<\?)(xml)
  end: (\?>)
  captures:
    '1': {name: punctuation.definition.tag.html}
    '2': {name: entity.name.tag.xml.html}
  patterns:
  - include: '#tag-generic-attribute'
  - include: '#string-double-quoted'
  - include: '#string-single-quoted'

- name: comment.block.html
  begin: <!--
  end: --\s*>
  captures:
    '0': {name: punctuation.definition.comment.html}
  patterns:
  - name: invalid.illegal.bad-comments-or-CDATA.html
    match: (\s)((?!(%--|--%))--\s)|(^)((?!(%--|--%))--\s)
    captures:
      '1': {name: comment.block.html}
      '2': {name: invalid.illegal.bad-comments-or-CDATA.html}
  - include: '#embedded-code'

- name: meta.tag.sgml.html
  begin: <!
  end: '>'
  captures:
    '0': {name: punctuation.definition.tag.html}
  patterns:
  - name: meta.tag.sgml.doctype.html
    begin: (?i:DOCTYPE)
    end: (?=>)
    captures:
      '1': {name: entity.name.tag.doctype.html}
    patterns:
    - name: string.quoted.double.doctype.identifiers-and-DTDs.html
      match: '"[^">]*"'
  - name: constant.other.inline-data.html
    begin: \[CDATA\[
    end: ']](?=>)'
  - name: invalid.illegal.bad-comments-or-CDATA.html
    match: (\s*)(?!--|>)\S(\s*)

- include: '#embedded-code'

- name: meta.tag.style.html
  begin: (?:^\s+)?(<)((?i:style))\b(?![^>]*/>)
  beginCaptures:
    '1': {name: punctuation.definition.tag.begin.html}
    '2': {name: entity.name.tag.script.html}
  end: (?<=</([sS][tT][yY][lL][eE]))(>)(?:\s*\n)?
  endCaptures:
    '2': {name: punctuation.definition.tag.html}
  patterns:
  - include: '#tag-stuff'
  - contentName: source.css.embedded.html
    begin: (?<!</(?:[sS][tT][yY][lL][eE]))(>)
    end: (</)((?i:style))
    captures:
      '1': {name: punctuation.definition.tag.end.html}
      '2': {name: entity.name.tag.script.html}
    patterns:
    - name: comment.line.double-slash.css
      match: (//).*?((?=</[sS][tT][yY][lL][eE])|$\n?)
      captures:
        '1': {name: punctuation.definition.comment.css}
    - name: comment.block.css
      begin: /\*
      end: \*/|(?=</[sS][tT][yY][lL][eE])
      captures:
        '0': {name: punctuation.definition.comment.css}
    - include: '#jstl'
    - include: '#jstl-variable'
    - include: source.css

- name: meta.tag.script.html
  begin: (?:^\s+)?(<)((?i:script))\b(?![^>]*/>)(?!.*type=["'](text/(?:template|html|x-template))|(x-tmpl-mustache)['"])
  beginCaptures:
    '1': {name: punctuation.definition.tag.begin.html}
    '2': {name: entity.name.tag.script.html}
  end: (?<=</([sS][cC][rR][iI][pP][tT]))(>)(?:\s*\n)?
  endCaptures:
    '2': {name: punctuation.definition.tag.html}
  patterns:
  - include: '#tag-stuff'
  - contentName: source.js.embedded.html
    begin: (?<!</(?:[sS][cC][rR][iI][pP][tT]))(>)
    end: (</)((?i:script))
    captures:
      '1': {name: punctuation.definition.tag.end.html}
      '2': {name: entity.name.tag.script.html}
    patterns:
    - name: comment.line.double-slash.js
      match: (//).*?((?=</[sS][cC][rR][iI][pP][tT])|$\n?)
      captures:
        '1': {name: punctuation.definition.comment.js}
    - name: comment.block.js
      begin: /\*
      end: \*/|(?=</[sS][cC][rR][iI][pP][tT])
      captures:
        '0': {name: punctuation.definition.comment.js}
    - include: '#jstl'
    - include: '#jstl-variable'
    - include: source.js

- name: meta.tag.structure.any.html
  begin: (</?)((?i:body|head|html)\b)
  end: (>)
  endCaptures:
    '1': {name: punctuation.definition.tag.end.html}
  captures:
    '1': {name: punctuation.definition.tag.begin.html}
    '2': {name: entity.name.tag.structure.any.html}
  patterns:
  - include: '#tag-stuff'

- name: meta.tag.block.any.html
  begin: (</?)((?i:address|blockquote|dd|div|dl|dt|fieldset|form|frame|frameset|h1|h2|h3|h4|h5|h6|iframe|noframes|object|ol|p|ul|applet|center|dir|hr|menu|pre)\b)
  beginCaptures:
    '1': {name: punctuation.definition.tag.begin.html}
    '2': {name: entity.name.tag.block.any.html}
  end: (>)
  endCaptures:
    '1': {name: punctuation.definition.tag.end.html}
  patterns:
  - include: '#tag-stuff'

- name: meta.tag.inline.any.html
  begin: (</?)((?i:a|abbr|acronym|area|b|base|basefont|bdo|big|br|button|caption|cite|code|col|colgroup|del|dfn|em|font|head|html|i|img|input|ins|isindex|kbd|label|legend|li|link|map|meta|noscript|optgroup|option|param|q|s|samp|script|select|small|span|strike|strong|style|sub|sup|table|tbody|td|textarea|tfoot|th|thead|title|tr|tt|u|var)\b)
  beginCaptures:
    '1': {name: punctuation.definition.tag.begin.html}
    '2': {name: entity.name.tag.inline.any.html}
  end: '((?: ?/)?>)'
  endCaptures:
    '1': {name: punctuation.definition.tag.end.html}
  patterns:
  - include: '#tag-stuff'

- name: meta.tag.other.html
  begin: (</?)([a-zA-Z0-9:]+)
  beginCaptures:
    '1': {name: punctuation.definition.tag.begin.html}
    '2': {name: entity.name.tag.other.html}
  end: (>)
  endCaptures:
    '1': {name: punctuation.definition.tag.end.html}
  patterns:
  - include: '#tag-stuff'

- include: '#entities'

- name: invalid.illegal.incomplete.html
  match: <>

- name: invalid.illegal.bad-angle-bracket.html
  match: <

repository:
  embedded-code:
    patterns:
    # - include: '#ruby'
    - include: '#php'
    - include: '#python'
    - include: '#embedded-jstl'
    - include: '#jstl-variable'

  entities:
    patterns:
    - name: constant.character.entity.html
      match: (&)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)
      captures:
        '1': {name: punctuation.definition.entity.html}
        '3': {name: punctuation.definition.entity.html}
    - name: invalid.illegal.bad-ampersand.html
      match: '&'

  jstl:
    patterns:
    # jstl part
    - comment: jstl (all) tags
      name: punctuation.section.directive.jstl
      match: '(<)(\/)([a-zA-Z0-9^\ ]*?)(:.*?)(>)'
    - comment: jstl tags
      name: punctuation.section.directive.jstl
      begin: '(<)([a-zA-Z0-9]*?)(:.*?)'
      end: '\/>|>'
      patterns:
      - comment: jstl tags attributes
        name: constant.other.directive.attribute.jstl
        match: ([a-zA-Z0-9-]*)(?=(=("|')))
      - comment:  jstl costant inside tags
        name: keyword.operator.assignment.jstl
        match: '='
      - comment: jstl text inside double quoted attributs
        name: string.quoted.double.jstl
        begin: (")
        end: (")
        patterns:
        - include: '#jstl-variable'
      - comment: jstl text inside double quoted attributs
        name: string.quoted.single.jstl
        begin: (')
        end: (')
        patterns:
        - include: '#jstl-variable'
    # jsp part
    - comment: jsp comments
      name: comment.block.jsp
      begin: '<%--'
      captures:
        '0': {name: punctuation.definition.comment.jsp}
      end: '--%>'
    - comment: jsp tags
      name: meta.directive.jsp
      begin: '<%@'
      captures:
        '0': {name: punctuation.section.directive.jsp}
      end: '%>'
      patterns:
      - begin: \w+
        beginCaptures:
          '0': {name: keyword.other.directive.jsp}
        end: '(?=%>)'
        patterns:
        - name: constant.other.directive.attribute.jsp
          match: \w+
        - name: keyword.operator.assignment.jsp
          match: '='
        - name: string.quoted.double.jsp
          begin: '"'
          beginCaptures:
            '0': {name: punctuation.definition.string.begin.jsp}
          end: '"'
          endCaptures:
            '0': {name: punctuation.definition.string.end.jsp}
          patterns:
          - name: constant.character.escape.jsp
            match: \\.
        - name: string.quoted.single.jsp
          begin: ''''
          beginCaptures:
            '0': {name: punctuation.definition.string.begin.jsp}
          end: ''''
          endCaptures:
            '0': {name: punctuation.definition.string.end.jsp}
          patterns:
          - name: constant.character.escape.jsp
            match: \\.
    - comment: script tag
      begin: '(<%[!=]?)|(<jsp:scriptlet>|<jsp:expression>|<jsp:declaration>)'
      beginCaptures:
        '1': {name: punctuation.section.embedded.jsp}
        '2': {name: meta.tag.block.jsp}
      end: '(?<=</jsp:scriptlet>|</jsp:expression>|</jsp:declaration>|%>)'
      patterns:
      - match: '(</jsp:scriptlet>|</jsp:expression>|</jsp:declaration>)|(%>)'
        captures:
          '1': {name: meta.tag.block.jsp}
          '2': {name: punctuation.section.embedded.jsp}
      - name: source.java.embedded.jsp
        begin: '(?<!\n)(?!</jsp:scriptlet>|</jsp:expression>|</jsp:declaration>|%>|\{|\})'
        end: '(?=</jsp:scriptlet>|</jsp:expression>|</jsp:declaration>|%>|\{|\})|\n'
        patterns:
        - include: source.java
      - begin: '{'
        end: '}'
        patterns:
        - begin: '(</jsp:scriptlet>|</jsp:expression>|</jsp:declaration>)|(%>)'
          captures:
            '1': {name: meta.tag.block.jsp}
            '2': {name: punctuation.section.embedded.jsp}
          end: '(<jsp:scriptlet>|<jsp:expression>|<jsp:declaration>)|(<%[!=]?)'
          patterns:
          - include: text.html.jsp
        - include: source.java
      - include: source.java

  jstl-variable:
    name: variable.parameter.jstl
    begin: '\${'
    end: '}'
    patterns:
    - comment: elements inside variables
      name: keyword.jstl
      match: '( (and |or )(empty|not empty|\!empty) )|( (and|or|not empty|empty|\!empty|lt|gt|le|ge|eq|ne|\?|:|&&|==|>=|<=|>|<|\!=|\!|\+|\\|\/|-|%) )|(\?|:|&&|==|>=|<=|>|<|\!=|\!|\+|\\|\/|-|%|\)|\()'
    - comment: elements inside variables
      name: keyword.jstl
      match: '([a-zA-Z0-9]*?)(:)(.*?)(?=\()'

  embedded-jstl:
   patterns:
   - comment: jstl (all) tags
     name: keyword.control.jstl
     match: '(<)(\/)([a-zA-Z0-9^\ ]*?)(:.*?)(>)'
   - comment: jstl tags
     name: keyword.control.jstl
     begin: '(<)([a-zA-Z0-9]*?)(:.*?)'
     end: '\/>|>'
     patterns:
     - comment: jstl tags attributes
       name: constant.other.directive.attribute.jstl
       match: ([a-zA-Z0-9-]*)(?=(=("|')))
     - comment:  jstl costant inside tags
       name: keyword.operator.assignment.jstl
       match: '='
     - comment: jstl text inside double quoted attributs
       name: string.quoted.double.jstl
       begin: (")
       end: (")
       patterns:
       - include: '#jstl-variable'
     - comment: jstl text inside double quoted attributs
       name: string.quoted.single.jstl
       begin: (')
       end: (')
       patterns:
       - include: '#jstl-variable'

  php:
    begin: (?=(^\s*)?<\?)
    end: (?!(^\s*)?<\?)
    patterns:
    - include: source.php

  python:
    contentName: source.python.embedded.html
    begin: (?:^\s*)<\?python(?!.*\?>)
    end: \?>(?:\s*$\n)?
    patterns:
    - include: source.python

  # ruby:
  #   patterns:
  #   - name: comment.block.erb
  #     begin: <%+#
  #     end: '%>'
  #     captures:
  #       '0': {name: punctuation.definition.comment.erb}
  #   - contentName: source.ruby.embedded.html
  #     begin: <%+(?!>)=?
  #     end: -?%>
  #     captures:
  #       '0': {name: punctuation.section.embedded.ruby}
  #     patterns:
  #     - name: comment.line.number-sign.ruby
  #       match: (#).*?(?=-?%>)
  #       captures:
  #         '1': {name: punctuation.definition.comment.ruby}
  #     - include: source.ruby
  #   - contentName: source.ruby.nitro.embedded.html
  #     begin: <\?r(?!>)=?
  #     end: -?\?>
  #     captures:
  #       '0': {name: punctuation.section.embedded.ruby.nitro}
  #     patterns:
  #     - name: comment.line.number-sign.ruby.nitro
  #       match: (#).*?(?=-?\?>)
  #       captures:
  #         '1': {name: punctuation.definition.comment.ruby.nitro}
  #     - include: source.ruby

  string-double-quoted:
    name: string.quoted.double.html
    begin: '"'
    beginCaptures:
      '0': {name: punctuation.definition.string.begin.html}
    end: '"'
    endCaptures:
      '0': {name: punctuation.definition.string.end.html}
    patterns:
    - include: '#embedded-code'
    - include: '#entities'
    

  string-single-quoted:
    name: string.quoted.single.html
    begin: ''''
    beginCaptures:
      '0': {name: punctuation.definition.string.begin.html}
    end: ''''
    endCaptures:
      '0': {name: punctuation.definition.string.end.html}
    patterns:
    - include: '#embedded-code'
    - include: '#entities'

  tag-generic-attribute:
    name: entity.other.attribute-name.html
    match: \b([a-zA-Z\-:]+)

  tag-id-attribute:
    name: meta.attribute-with-value.id.html
    begin: \b(id)\b\s*(=)
    end: (?<='|")
    captures:
      '1': {name: entity.other.attribute-name.id.html}
      '2': {name: punctuation.separator.key-value.html}
    patterns:
    - name: string.quoted.double.html
      contentName: meta.toc-list.id.html
      begin: '"'
      beginCaptures:
        '0': {name: punctuation.definition.string.begin.html}
      end: '"'
      endCaptures:
        '0': {name: punctuation.definition.string.end.html}
      patterns:
      - include: '#embedded-code'
      - include: '#entities'
    - name: string.quoted.single.html
      contentName: meta.toc-list.id.html
      begin: ''''
      beginCaptures:
        '0': {name: punctuation.definition.string.begin.html}
      end: ''''
      endCaptures:
        '0': {name: punctuation.definition.string.end.html}
      patterns:
      - include: '#embedded-code'
      - include: '#entities'

  tag-stuff:
    patterns:
    - include: '#embedded-code'
    - include: '#tag-id-attribute'
    - include: '#tag-generic-attribute'
    - include: '#string-double-quoted'
    - include: '#string-single-quoted'
